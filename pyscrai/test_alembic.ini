# filepath: pyscrai/test_alembic.py
import configparser
import os
import pytest

@pytest.fixture
def alembic_config_path():
    """Fixture to provide the path to the alembic.ini file."""
    return os.path.join("pyscrai", "alembic.ini")

def test_alembic_ini_exists(alembic_config_path):
    """Test if alembic.ini file exists."""
    assert os.path.exists(alembic_config_path), "alembic.ini file is missing."

def test_alembic_ini_sections(alembic_config_path):
    """Test if alembic.ini contains required sections."""
    config = configparser.ConfigParser()
    config.read(alembic_config_path)

    required_sections = ["alembic", "loggers", "handlers", "formatters"]
    for section in required_sections:
        assert section in config.sections(), f"Missing section: {section}"

def test_alembic_script_location(alembic_config_path):
    """Test if script_location in alembic.ini is correctly set."""
    config = configparser.ConfigParser()
    config.read(alembic_config_path)

    script_location = config.get("alembic", "script_location", fallback=None)
    assert script_location == "pyscrai/alembic", "script_location is incorrect."

def test_alembic_sqlalchemy_url(alembic_config_path):
    """Test if sqlalchemy.url in alembic.ini is set."""
    config = configparser.ConfigParser()
    config.read(alembic_config_path)

    sqlalchemy_url = config.get("alembic", "sqlalchemy.url", fallback=None)
    assert sqlalchemy_url and sqlalchemy_url != "driver://user:pass@localhost/dbname", (
        "sqlalchemy.url is not configured properly."
    )

def test_alembic_logging_configuration(alembic_config_path):
    """Test if logging configuration is present in alembic.ini."""
    config = configparser.ConfigParser()
    config.read(alembic_config_path)

    assert "logger_alembic" in config.sections(), "Logging configuration for Alembic is missing."
    assert config.get("logger_alembic", "level", fallback=None) == "INFO", "Alembic logger level is not set to INFO."